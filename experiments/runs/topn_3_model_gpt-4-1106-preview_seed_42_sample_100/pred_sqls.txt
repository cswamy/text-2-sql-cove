SELECT AirportCode FROM (  SELECT SourceAirport AS AirportCode  FROM flights  UNION ALL  SELECT DestAirport  FROM flights ) AS AllFlights GROUP BY AirportCode ORDER BY COUNT(*) ASC LIMIT 1; 
SELECT COUNT(*) FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Age > 20; 
SELECT AVG(julianday(transcript_date)) - julianday('2000-01-01') AS average_print_date FROM Transcripts; 
SELECT DISTINCT name FROM battle WHERE bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'; 
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC; 
SELECT s.Name FROM shop s LEFT JOIN hiring h ON s.Shop_ID = h.Shop_ID WHERE h.Employee_ID IS NULL; 
SELECT COUNT(*) AS NumberOfFlightsArrivingInAberdeen FROM "flights" f JOIN "airports" a ON f."DestAirport" = a."AirportCode" WHERE a."City" = 'Aberdeen'; 
SELECT DISTINCT c.CountryId, c.CountryName FROM countries c LEFT JOIN car_makers cm ON c.CountryId = cm.Country LEFT JOIN model_list ml ON cm.Id = ml.Maker WHERE c.CountryId IN (   SELECT cm.Country   FROM car_makers cm   GROUP BY cm.Country   HAVING COUNT(cm.Id) > 3 ) OR ml.Model = 'Fiat'; 
SELECT name, grade FROM Highschooler; 
SELECT s.Fname, s.Age FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType = 'dog' AND s.StuID NOT IN (   SELECT s.StuID   FROM Student s   JOIN Has_Pet hp ON s.StuID = hp.StuID   JOIN Pets p ON hp.PetID = p.PetID   WHERE p.PetType = 'cat' ) GROUP BY s.StuID; 
SELECT s.Major, s.Age FROM Student s WHERE NOT EXISTS (  SELECT 1  FROM Has_Pet hp  JOIN Pets p ON hp.PetID = p.PetID  WHERE hp.StuID = s.StuID AND p.PetType = 'cat' ); 
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower != 'NA' ORDER BY CAST(cars_data.Horsepower AS INTEGER) ASC LIMIT 1; 
SELECT a.City FROM airports a JOIN flights f ON a.AirportCode = f.SourceAirport GROUP BY a.City ORDER BY COUNT(f.SourceAirport) DESC LIMIT 1; 
SELECT a.Airline FROM airlines a JOIN flights f1 ON a.uid = f1.Airline JOIN flights f2 ON a.uid = f2.Airline WHERE f1.SourceAirport = 'APG' AND f2.SourceAirport = 'CVO' GROUP BY a.Airline HAVING COUNT(DISTINCT f1.SourceAirport) > 0 AND COUNT(DISTINCT f2.SourceAirport) > 0; 
SELECT COUNT(DISTINCT department_id) FROM Degree_Programs; 
SELECT "Episode", "Rating" FROM "TV_series" WHERE "Rating" IS NOT NULL ORDER BY "Rating" DESC LIMIT 3; 
SELECT "Year" FROM concert GROUP BY "Year" ORDER BY COUNT(*) DESC LIMIT 1; 
SELECT t.transcript_id, t.transcript_date FROM Transcripts t LEFT JOIN Transcript_Contents tc ON t.transcript_id = tc.transcript_id GROUP BY t.transcript_id, t.transcript_date ORDER BY COUNT(tc.student_course_id) ASC LIMIT 1; 
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG'; 
SELECT COUNT(DISTINCT Language) FROM countrylanguage; 
SELECT p.Birth_Date FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY pp.Earnings ASC LIMIT 1; 
SELECT AVG("LifeExpectancy") FROM "country" WHERE "Region" = 'Central Africa'; 
SELECT first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1; 
SELECT COUNT(*) FROM players; 
SELECT AirportCode FROM (  SELECT SourceAirport AS AirportCode  FROM flights  UNION ALL  SELECT DestAirport AS AirportCode  FROM flights ) AS AllFlights GROUP BY AirportCode ORDER BY COUNT(*) DESC LIMIT 1; 
SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE r.tours = (SELECT MAX(tours) FROM rankings); 
SELECT COUNT(*) AS English_Channel_Count FROM "TV_Channel" WHERE "Language" = 'English'; 
SELECT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Shop_ID ORDER BY COUNT(h.Employee_ID) DESC LIMIT 1; 
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded DESC; 
SELECT H2.name FROM Highschooler H1 JOIN Friend F ON H1.ID = F.student_id JOIN Highschooler H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle'; 
SELECT "Name", "Song_release_year" FROM "singer" WHERE "Age" = (SELECT MIN("Age") FROM "singer"); 
SELECT Name FROM country WHERE Continent = 'Asia' AND Population > (  SELECT MAX(Population)  FROM country  WHERE Continent = 'Africa' ); 
SELECT "Name" FROM "conductor" ORDER BY "Age"; 
SELECT COUNT(*) FROM "cars_data" WHERE "Cylinders" > 6; 
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil'; 
SELECT COUNT(*) FROM matches; 
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types; 
SELECT Name FROM singer WHERE Citizenship != 'France'; 
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Accelerate) FROM cars_data WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data WHERE Horsepower != 'NULL')) 
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen'; 
SELECT COUNT(DISTINCT o.owner_id) FROM Owners o LEFT JOIN Dogs d ON o.owner_id = d.owner_id WHERE d.dog_id IS NULL; 
SELECT DISTINCT cl.CountryCode FROM countrylanguage cl WHERE cl.Language != 'English' AND cl.CountryCode NOT IN (  SELECT cl2.CountryCode  FROM countrylanguage cl2  WHERE cl2.Language = 'English' ); 
SELECT T.Template_Type_Code FROM Templates AS T JOIN Documents AS D ON T.Template_ID = D.Template_ID GROUP BY T.Template_Type_Code ORDER BY COUNT(D.Document_ID) DESC LIMIT 1; 
SELECT DISTINCT ml.Model FROM model_list ml JOIN car_names cn ON ml.ModelId = cn.Model JOIN cars_data cd ON cn.MakeId = cd.Id WHERE cd.Year > 1980; 
SELECT cm.FullName, cm.Id, COUNT(ml.ModelId) AS NumberOfModels FROM car_makers cm LEFT JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.Id, cm.FullName; 
SELECT "Name" FROM "teacher" WHERE "Age" IN ('32', '33'); 
SELECT DISTINCT cm.Maker FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker JOIN car_names cn ON ml.Model = cn.Model JOIN cars_data cd ON cn.MakeId = cd.Id WHERE cd.Year = 1970; 
SELECT d.Document_ID, COUNT(p.Paragraph_ID) AS NumberOfParagraphs FROM Documents d LEFT JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID ORDER BY d.Document_ID; 
SELECT name, grade FROM Highschooler; 
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book'; 
SELECT MAX(Share) AS MaximumShare, MIN(Share) AS MinimumShare FROM TV_series; 
SELECT Manager_name, District FROM shop ORDER BY Number_products DESC LIMIT 1; 
SELECT Name FROM conductor WHERE Nationality NOT IN ('USA', 'U.S.A.', 'United States') OR Nationality IS NULL; 
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (  SELECT Stadium_ID  FROM stadium  ORDER BY Capacity DESC  LIMIT 1 ); 
SELECT c.Name FROM country AS c JOIN countrylanguage AS cl1 ON c.Code = cl1.CountryCode JOIN countrylanguage AS cl2 ON c.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl2.Language = 'French'; 
SELECT p.first_name, AVG(r.ranking) as average_ranking FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id; 
SELECT s.last_name FROM Students s LEFT JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND se.student_id IS NULL; 
SELECT Year, AVG(Weight) as AverageWeight FROM cars_data GROUP BY Year ORDER BY Year; 
SELECT DISTINCT p.first_name, p.last_name FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments); 
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District'; 
SELECT Has_Pet.StuID, COUNT(Has_Pet.PetID) AS NumberOfPets FROM Has_Pet GROUP BY Has_Pet.StuID; 
SELECT "transcript_date", "other_details" FROM "Transcripts" ORDER BY "transcript_date" ASC LIMIT 1; 
SELECT Document_ID, Document_Name, Document_Description FROM Documents; 
SELECT Record_Company, COUNT(*) AS NumberOfOrchestras FROM orchestra GROUP BY Record_Company; 
SELECT id FROM TV_Channel WHERE id NOT IN (   SELECT Channel FROM Cartoon   WHERE Directed_by = 'Ben Jones' ); 
SELECT DISTINCT TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey'; 
SELECT H.name FROM Highschooler H JOIN (SELECT liked_id, COUNT(*) as like_count    FROM Likes    GROUP BY liked_id) as L ON H.ID = L.liked_id ORDER BY L.like_count DESC LIMIT 1; 
SELECT Highschooler.ID, COUNT(Friend.friend_id) AS NumberOfFriends FROM Highschooler LEFT JOIN Friend ON Highschooler.ID = Friend.student_id GROUP BY Highschooler.ID; 
SELECT   d.Document_ID,   d.Document_Name,   COUNT(p.Paragraph_ID) AS NumberOfParagraphs FROM   "Documents" d LEFT JOIN   "Paragraphs" p ON d.Document_ID = p.Document_ID GROUP BY   d.Document_ID,   d.Document_Name; 
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date; 
SELECT COUNT(*) FROM airlines WHERE TRIM(UPPER(Country)) = 'UNITED STATES'; 
SELECT Name FROM country WHERE Continent = 'Asia' AND LifeExpectancy IS NOT NULL ORDER BY LifeExpectancy ASC LIMIT 1; 
SELECT PetType, AVG(pet_age) as average_age, MAX(pet_age) as maximum_age FROM Pets GROUP BY PetType; 
SELECT COUNT(*) FROM Pets WHERE weight > 10; 
SELECT TRIM(UPPER(Nationality)) AS CleanedNationality FROM people GROUP BY CleanedNationality HAVING COUNT(*) >= 2; 
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.SourceAirport = 'AHD'; 
SELECT c.Name, c.Population, c.HeadOfState FROM country c ORDER BY c.SurfaceArea DESC LIMIT 1; 
SELECT COUNT(DISTINCT "Location") FROM "shop"; 
SELECT S.Fname, S.Sex FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID GROUP BY S.StuID, S.Fname, S.Sex HAVING COUNT(HP.PetID) > 1 
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10); 
SELECT DISTINCT s.Name FROM singer s JOIN song sg ON s.Singer_ID = sg.Singer_ID WHERE sg.Sales > 300000; 
SELECT H.name FROM Highschooler H JOIN (SELECT F.student_id, COUNT(F.friend_id) AS friend_count    FROM Friend F    GROUP BY F.student_id) AS FC ON H.ID = FC.student_id ORDER BY FC.friend_count DESC LIMIT 1; 
SELECT DISTINCT ml.Model FROM model_list ml JOIN cars_data cd ON ml.ModelId = cd.Id WHERE cd.Year > 1980; 
SELECT MAX(strftime('%Y-%m-%d', 'now') - strftime('%Y-%m-%d', date_of_birth)) AS age_of_oldest_dog FROM Dogs; 
SELECT b.breed_name, s.size_description FROM Breeds b CROSS JOIN Sizes s; 
SELECT p.first_name || ' ' || p.last_name AS winner_name, r.ranking_points FROM players p JOIN (  SELECT winner_id, COUNT(*) AS wins  FROM matches  GROUP BY winner_id  ORDER BY wins DESC  LIMIT 1 ) AS m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id ORDER BY r.ranking_date DESC LIMIT 1; 
SELECT Earnings FROM poker_player ORDER BY Earnings DESC; 
SELECT o.Orchestra FROM orchestra o LEFT JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Orchestra_ID IS NULL; 
SELECT d.Document_ID, d.Document_Name FROM Documents d JOIN Paragraphs p ON d.Document_ID = p.Document_ID GROUP BY d.Document_ID, d.Document_Name ORDER BY COUNT(p.Paragraph_ID) DESC LIMIT 1; 
SELECT ml.Model FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId JOIN model_list ml ON cn.Model = ml.ModelId WHERE cd.Cylinders = 4 ORDER BY CAST(cd.Horsepower AS INTEGER) DESC LIMIT 1; 
SELECT DISTINCT d."Document_ID" FROM "Documents" d JOIN "Paragraphs" p1 ON d."Document_ID" = p1."Document_ID" JOIN "Paragraphs" p2 ON d."Document_ID" = p2."Document_ID" WHERE LOWER(p1."Paragraph_Text") LIKE '%brazil%' AND LOWER(p2."Paragraph_Text") LIKE '%ireland%' AND p1."Paragraph_ID" <> p2."Paragraph_ID"; 
SELECT Paragraph_ID FROM Paragraphs JOIN Documents ON Paragraphs.Document_ID = Documents.Document_ID WHERE Documents.Document_Name = 'Welcome to NY'; 
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Abbreviation = 'B6'; 
SELECT COUNT(DISTINCT "Nationality") FROM "people"; 
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC; 
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship; 
SELECT V.created, V.state, V.phone_number FROM VOTES V JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Tabatha Gehling'; 
SELECT p.Name FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY pp.Final_Table_Made ASC; 
SELECT PetType, AVG(weight) AS average_weight FROM Pets GROUP BY PetType; 
SELECT c.series_name FROM TV_Channel c JOIN TV_series s ON c.id = s.Channel WHERE s.Episode = 'A Love of a Lifetime'; 
